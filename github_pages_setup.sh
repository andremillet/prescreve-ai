#!/bin/bash

# Script para configurar e implantar a documenta√ß√£o do prescreve.ai no GitHub Pages

echo "üöÄ Configurando a documenta√ß√£o do prescreve.ai para GitHub Pages..."

# Verificar se git est√° instalado
if ! command -v git &> /dev/null; then
    echo "‚ùå Git n√£o encontrado. Por favor, instale o Git antes de continuar."
    exit 1
fi

# Verificar se estamos em um reposit√≥rio Git
if [ ! -d .git ]; then
    echo "‚ö†Ô∏è Este diret√≥rio n√£o parece ser um reposit√≥rio Git."
    read -p "Deseja inicializar um novo reposit√≥rio Git? (s/n): " inicializar_git
    
    if [[ $inicializar_git == "s" || $inicializar_git == "S" ]]; then
        git init
        echo "‚úÖ Reposit√≥rio Git inicializado."
    else
        echo "‚ùå Abortando. Um reposit√≥rio Git √© necess√°rio para o GitHub Pages."
        exit 1
    fi
fi

# Verificar e atualizar o arquivo docusaurus.config.js
if [ -f docusaurus.config.js ]; then
    echo "üìù Atualizando configura√ß√£o do Docusaurus para GitHub Pages..."
    
    # Obter nome de usu√°rio/organiza√ß√£o e reposit√≥rio do Git remoto
    remote_url=$(git config --get remote.origin.url || echo "")
    
    if [ -z "$remote_url" ]; then
        echo "‚ö†Ô∏è N√£o foi poss√≠vel detectar automaticamente o reposit√≥rio remoto."
        read -p "Digite seu nome de usu√°rio/organiza√ß√£o do GitHub: " github_username
        read -p "Digite o nome do reposit√≥rio: " repo_name
    else
        if [[ $remote_url == *github.com* ]]; then
            # Extrair nome de usu√°rio e reposit√≥rio da URL
            if [[ $remote_url == *github.com:* ]]; then
                # SSH URL format: git@github.com:username/repo.git
                username_repo=${remote_url#*github.com:}
            else
                # HTTPS URL format: https://github.com/username/repo.git
                username_repo=${remote_url#*github.com/}
            fi
            
            username_repo=${username_repo%.git}
            github_username=$(echo $username_repo | cut -d'/' -f1)
            repo_name=$(echo $username_repo | cut -d'/' -f2)
        else
            echo "‚ö†Ô∏è O reposit√≥rio remoto n√£o parece ser do GitHub."
            read -p "Digite seu nome de usu√°rio/organiza√ß√£o do GitHub: " github_username
            read -p "Digite o nome do reposit√≥rio: " repo_name
        fi
    fi
    
    # Atualizar configura√ß√£o do Docusaurus
    sed -i.bak "s|url: 'https://docs.prescreve.ai'|url: 'https://${github_username}.github.io'|g" docusaurus.config.js
    sed -i.bak "s|baseUrl: '/'|baseUrl: '/${repo_name}/'|g" docusaurus.config.js
    sed -i.bak "s|organizationName: 'prescreve-ai'|organizationName: '${github_username}'|g" docusaurus.config.js
    sed -i.bak "s|projectName: 'prescreve-ai-docs'|projectName: '${repo_name}'|g" docusaurus.config.js
    
    # Adicionar configura√ß√£o de deployment
    deployment_config="  // Configura√ß√£o para GitHub Pages\n  trailingSlash: false,\n  deploymentBranch: 'gh-pages',\n"
    sed -i.bak "/onBrokenMarkdownLinks: 'warn',/a\\${deployment_config}" docusaurus.config.js
    
    # Limpar arquivos de backup
    rm docusaurus.config.js.bak
    
    echo "‚úÖ Configura√ß√£o do Docusaurus atualizada para GitHub Pages."
else
    echo "‚ùå Arquivo docusaurus.config.js n√£o encontrado. Execute primeiro o script setup_docusaurus.sh."
    exit 1
fi

# Criar arquivo de workflow do GitHub Actions
mkdir -p .github/workflows
cat > .github/workflows/documentation.yml << 'EOT'
name: Deploy Documentation to GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'src/**'
      - 'static/**'
      - 'docusaurus.config.js'
      - 'package.json'
      - '.github/workflows/documentation.yml'

  # Permite executar manualmente o workflow na interface do GitHub
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci
      
      - name: Build website
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
EOT

echo "‚úÖ Arquivo de workflow do GitHub Actions criado."

# Criar arquivo .nojekyll para evitar processamento Jekyll no GitHub Pages
touch static/.nojekyll

# Adicionar comando de deploy no package.json
if [ -f package.json ]; then
    if ! grep -q '"deploy"' package.json; then
        sed -i.bak '/scripts/a\    "deploy": "GIT_USER=<GITHUB_USERNAME> docusaurus deploy",' package.json
        rm package.json.bak
        echo "‚úÖ Comando de deploy adicionado ao package.json."
    fi
fi

cat << 'EOT' > GITHUB_PAGES_DEPLOYMENT.md
# Implanta√ß√£o no GitHub Pages

Este documento explica como a documenta√ß√£o do prescreve.ai est√° configurada para implanta√ß√£o autom√°tica no GitHub Pages.

## Configura√ß√£o Atual

A documenta√ß√£o est√° configurada para ser implantada automaticamente no GitHub Pages quando ocorrerem altera√ß√µes em arquivos relevantes no branch principal. O processo de implanta√ß√£o √© gerenciado pelo GitHub Actions.

## Fluxo de Implanta√ß√£o

1. Quando voc√™ envia altera√ß√µes para o branch principal (`main`), o workflow do GitHub Actions √© acionado
2. O GitHub Actions constr√≥i o site usando Docusaurus
3. O site constru√≠do √© implantado no branch `gh-pages`
4. O GitHub Pages serve o conte√∫do a partir deste branch

## Implanta√ß√£o Manual

Voc√™ tamb√©m pode acionar a implanta√ß√£o manualmente:

1. No GitHub, v√° para a guia "Actions" do seu reposit√≥rio
2. Selecione o workflow "Deploy Documentation to GitHub Pages"
3. Clique no bot√£o "Run workflow"
4. Selecione o branch "main" e confirme

## Alterando a Configura√ß√£o

Se voc√™ precisar alterar a configura√ß√£o de implanta√ß√£o:

1. Edite o arquivo `.github/workflows/documentation.yml` para modificar o workflow do GitHub Actions
2. Edite o arquivo `docusaurus.config.js` para modificar configura√ß√µes espec√≠ficas do Docusaurus para o GitHub Pages

## Dom√≠nio Personalizado

Para usar um dom√≠nio personalizado com seu site do GitHub Pages:

1. No GitHub, v√° para "Settings" > "Pages"
2. Na se√ß√£o "Custom domain", digite seu dom√≠nio personalizado (ex: docs.prescreve.ai)
3. Clique em "Save"
4. Adicione um arquivo CNAME √† pasta `static/` do seu projeto com o nome do dom√≠nio
5. Configure seu DNS conforme as instru√ß√µes do GitHub

## Solu√ß√£o de Problemas

Se a implanta√ß√£o falhar:

1. Verifique os logs na guia "Actions" do GitHub
2. Confirme se as depend√™ncias est√£o instaladas corretamente
3. Verifique se o reposit√≥rio tem as permiss√µes corretas para o GitHub Actions

Para mais detalhes, consulte a [documenta√ß√£o do Docusaurus sobre implanta√ß√£o](https://docusaurus.io/docs/deployment#deploying-to-github-pages).
EOT

echo "‚úÖ Guia de implanta√ß√£o do GitHub Pages criado: GITHUB_PAGES_DEPLOYMENT.md"

echo ""
echo "üéâ Configura√ß√£o para GitHub Pages conclu√≠da!"
echo ""
echo "Pr√≥ximos passos:"
echo "1. Se ainda n√£o fez, crie um reposit√≥rio no GitHub para este projeto"
echo "2. Adicione o reposit√≥rio remoto: git remote add origin https://github.com/SEU_USUARIO/SEU_REPOSITORIO.git"
echo "3. Envie seu c√≥digo: git add . && git commit -m 'Configura√ß√£o inicial' && git push -u origin main"
echo "4. A documenta√ß√£o ser√° implantada automaticamente no GitHub Pages ap√≥s o push"
echo "5. Seu site estar√° dispon√≠vel em https://SEU_USUARIO.github.io/SEU_REPOSITORIO/"
echo ""
echo "Para mais detalhes, consulte o arquivo GITHUB_PAGES_DEPLOYMENT.md"